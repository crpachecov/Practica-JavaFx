/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package spa;

import config.Connections;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Clients extends javax.swing.JPanel {

    Connections con = new Connections();
    Connection cn = con.conectar();

    DefaultTableModel ta = new DefaultTableModel() {

        public boolean isCellEditable(int rows, int columns) {//Celdas no editables
            return false;
        }
    };

    public Clients() {
        initComponents();

        String[] columnNames = {"Cedula", "Nombre", "Telefono", "Dirección", "Email"};
        ta.setColumnIdentifiers(columnNames);
        tableClients.setModel(ta);

        fillTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDni = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtFdDni = new javax.swing.JTextField();
        txtFdName = new javax.swing.JTextField();
        txtFdAddress = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableClients = new javax.swing.JTable();
        lblLastName = new javax.swing.JLabel();
        txtFdLastName = new javax.swing.JTextField();
        txtFdPhone = new javax.swing.JFormattedTextField();
        lblPhone = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtFdEmail = new javax.swing.JTextField();

        setBackground(new java.awt.Color(153, 153, 153));
        setForeground(new java.awt.Color(153, 153, 153));

        lblDni.setText("CC");

        lblName.setText("Nombre");

        lblAddress.setText("Dirección");

        btnSave.setText("Guardar");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnModify.setText("Modificar");
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        tableClients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cedula", "Nombre", "Telefono", "Dirección"
            }
        ));
        tableClients.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableClientsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableClients);

        lblLastName.setText("Apellido");

        txtFdPhone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        lblPhone.setText("Telefono");

        lblEmail.setText("Email");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLastName)
                    .addComponent(lblName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFdLastName)
                            .addComponent(txtFdName, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDni)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtFdDni, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblAddress)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnModify)
                                    .addComponent(txtFdAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(btnSave))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPhone)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFdPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblEmail)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete)
                            .addComponent(txtFdEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29))
            .addComponent(jSeparator1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFdName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName)
                            .addComponent(lblDni))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFdLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLastName)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPhone)
                            .addComponent(txtFdPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFdDni, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(txtFdEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddress)
                            .addComponent(txtFdAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnModify)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String[] data = new String[6];
        if (dataIsEmpity(data) == true) {
            submitData(data);

        } else {
            JOptionPane.showMessageDialog(this, "CAMPOS VACIOS.", "Error de campos sin llenar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        String[] data = new String[6];
        if (dataIsEmpity(data) == true) {
            modifyData(data);

        } else {
            JOptionPane.showMessageDialog(this, "CAMPOS VACIOS.", "Error de campos sin llenar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        deleteData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tableClientsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableClientsMouseClicked
        //Seleciona una fila y envia a los textfield
        int selectedRow = tableClients.getSelectedRow();
        String[] rowData = new String[6];

        for (int i = 0, j = 0; i < tableClients.getColumnCount(); i++, j++) {
            String cellValue = tableClients.getValueAt(selectedRow, i).toString();

            if (i == 1) {
                String[] namesCustomers = cellValue.split(" ");
                rowData[j] = namesCustomers[0].trim();
                rowData[j + 1] = namesCustomers[1].trim();
            } else if (i == 2) {
                rowData[j + 1] = cellValue;
                j = 3; // Saltar al siguiente índice
            } else {
                rowData[j] = cellValue;
            }
        }
        setData(rowData);
    }//GEN-LAST:event_tableClientsMouseClicked

    private boolean dataIsEmpity(String[] data) {
        //dni, name, last_name, address, phone_number, email
        data[0] = txtFdDni.getText();
        data[1] = txtFdName.getText();
        data[2] = txtFdLastName.getText();
        data[3] = txtFdAddress.getText();
        data[4] = txtFdPhone.getText();
        data[5] = txtFdEmail.getText();

        if ((data[0].isEmpty() == false && data[1].isEmpty() == false && data[2].isEmpty() == false && data[3].isEmpty() == false && data[4].isEmpty() == false && data[5].isEmpty() == false)) {
            return true;
        } else {
            JOptionPane.showMessageDialog(this, "CAMPOS VACIONS.", "Error de campos sin llenar", JOptionPane.ERROR_MESSAGE);
        }
        return false;
    }

    private void submitData(String[] data) {
        try {
            String query = "INSERT INTO customers (dni, name, last_name, address, phone_number, email) VALUES (?, ?, ?, ?, ?, ?)";
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, data[0]);
            pst.setString(2, data[1]);
            pst.setString(3, data[2]);
            pst.setString(4, data[3]);
            pst.setString(5, data[4]);
            pst.setString(6, data[5]);

            System.out.println(pst.executeUpdate());

            pst.close();
        } catch (SQLException e) {
            System.out.println(e);
        } finally {
            fillTable();
        }
    }

    private void modifyData(String[] data) {
        //dni, name, last_name, address, phone_number, email
        int selectedRow = tableClients.getSelectedRow();

        try {
            String query = "UPDATE customers SET dni = ?, name = ?, last_name = ?, address = ?, phone_number = ?, email = ? WHERE dni = ?";
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, data[0]);
            pst.setString(2, data[1]);
            pst.setString(3, data[2]);
            pst.setString(4, data[3]);
            pst.setString(5, data[4]);
            pst.setString(6, data[5]);
            pst.setString(7, tableClients.getValueAt(selectedRow, 0).toString());

            System.out.println("Filas actualizadas: " + pst.executeUpdate());

            pst.close();
        } catch (SQLException e) {
            System.out.println(e);
        } finally {
            clearData();
            fillTable();
        }
    }

    private void deleteData() {
        int selectedRow = tableClients.getSelectedRow();

        try {
            String query = "DELETE FROM customers WHERE dni = ?";
            PreparedStatement pst = cn.prepareStatement(query);
            pst.setString(1, tableClients.getValueAt(selectedRow, 0).toString());

            System.out.println("Filas actualizadas: " + pst.executeUpdate());

            pst.close();
        } catch (SQLException e) {
            System.out.println(e);
        } finally {
            clearData();
            fillTable();
        }
    }

    private void fillTable() {
        ta.setRowCount(0);
        String[][] dataTbA = new String[100][5];
        try {
            String query = "SELECT dni, name, last_name, address, phone_number, email FROM customers";
            PreparedStatement pst = cn.prepareStatement(query);
            ResultSet resultSet = pst.executeQuery();

            // Iterate through the ResultSet and populate the array
            int rowIndex = 0;
            while (resultSet.next()) {

                dataTbA[rowIndex][0] = resultSet.getString("dni");;
                dataTbA[rowIndex][1] = resultSet.getString("name") + " " + resultSet.getString("last_name");
                dataTbA[rowIndex][2] = resultSet.getString("address");
                dataTbA[rowIndex][3] = resultSet.getString("phone_number");
                dataTbA[rowIndex][4] = resultSet.getString("email");

                ta.addRow(new Object[]{dataTbA[rowIndex][0], dataTbA[rowIndex][1], dataTbA[rowIndex][3], dataTbA[rowIndex][2], dataTbA[rowIndex][4]});
                rowIndex++;
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    private void setData(String[] data) {
        //dni, name, last_name, address, phone_number, email
        txtFdDni.setText(data[0]);
        txtFdName.setText(data[1]);
        txtFdLastName.setText(data[2]);
        txtFdAddress.setText(data[4]);
        txtFdPhone.setText(data[3]);
        txtFdEmail.setText(data[5]);
    }

    private void clearData() {
        //dni, name, last_name, address, phone_number, email
        txtFdDni.setText("");
        txtFdName.setText("");
        txtFdLastName.setText("");
        txtFdAddress.setText("");
        txtFdPhone.setText("");
        txtFdEmail.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblDni;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JTable tableClients;
    private javax.swing.JTextField txtFdAddress;
    private javax.swing.JTextField txtFdDni;
    private javax.swing.JTextField txtFdEmail;
    private javax.swing.JTextField txtFdLastName;
    private javax.swing.JTextField txtFdName;
    private javax.swing.JFormattedTextField txtFdPhone;
    // End of variables declaration//GEN-END:variables
}
